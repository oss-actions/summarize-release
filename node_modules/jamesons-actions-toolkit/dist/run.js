"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.run = void 0;
const isDebug_1 = __importDefault(require("./isDebug"));
const setFailed_1 = __importDefault(require("./setFailed"));
let hasRun = false;
function run(action) {
    if (hasRun) {
        throw new Error("This function is only meant to be run once");
    }
    hasRun = true;
    const result = action();
    if (result instanceof Promise) {
        result.catch((error) => {
            var _a, _b, _c;
            if (error instanceof Error) {
                if ((0, isDebug_1.default)()) {
                    if ((_a = error.stack) === null || _a === void 0 ? void 0 : _a.startsWith("Error: ")) {
                        (0, setFailed_1.default)(((_b = error.stack) === null || _b === void 0 ? void 0 : _b.substring(7)) || error.message);
                    }
                    else {
                        (0, setFailed_1.default)(error.stack || error.message);
                    }
                }
                else {
                    if ((_c = error.stack) === null || _c === void 0 ? void 0 : _c.startsWith("Error: ")) {
                        (0, setFailed_1.default)(error.message);
                    }
                    else {
                        (0, setFailed_1.default)(error.name + ": " + error.message);
                    }
                }
            }
            else {
                (0, setFailed_1.default)(error);
            }
        });
    }
}
exports.run = run;
exports.default = run;
